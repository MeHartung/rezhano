homepage:
  path:      /
  defaults: { _controller: StoreBundle:Homepage:index }

catalog_index:
  path:     /catalog
  defaults: { _controller: StoreBundle:Catalog/Taxonomy:index }

product_list_index:
  path:     /products
  defaults: { _controller: StoreBundle:Catalog/Product:index }

taxon:
  path:      /catalog/{slug}
  defaults: { _controller: StoreBundle:Catalog/Taxonomy:taxon }

product:
  path:     /products/{slug}
  defaults: { _controller: StoreBundle:Catalog/Product:show }

#catalog_search:
#  path:  /search
#  defaults: { _controller: StoreBundle:Catalog/Search:search }

#catalog_search_suggest:
#  path: /search/suggest
#  defaults: { _controller: StoreBundle:Catalog/Search:suggest }

news_index:
  path:      /news
  defaults:  { _controller: StoreBundle:News:index }

news_show:
  path:      /news/{slug}
  defaults:  { _controller: StoreBundle:News:show }

rest_city_list:
  path:     /api/geography/cities
  defaults: { _controller: StoreBundle:Logistics/Geography:cityList }

cart_index:
  path:     /cart
  defaults: { _controller: StoreBundle:Order/Cart:index }

cart_add:
  path:     /cart/items
  defaults: { _controller: StoreBundle:Order/Cart:add }
  methods:  [POST]

cart_items:
  path:     /cart/items
  defaults: { _controller: StoreBundle:Order/Cart:list }
  methods:  [GET]

cart_remove:
  path:     /cart/items/{id}
  defaults: { _controller: StoreBundle:Order/Cart:remove }
  methods:  [DELETE]

cart_reset:
  path: /cart/reset
  defaults: { _controller: StoreBundle:Order\Cart:reset}

cart_item_update:
  path:     /cart/items/{id}
  defaults: { _controller: StoreBundle:Order/Cart:update }
  methods:  [PUT]

checkout:
  path:     /checkout
  defaults: { _controller: StoreBundle:Order/Checkout:checkout }

checkout_shipping:
  path: /checkout/delivery
  defaults: { _controller: StoreBundle:Order/Checkout:deliveryStep }

checkout_payment:
  path: /checkout/payment
  defaults: { _controller: StoreBundle:Order\Checkout:paymentStep }

checkout_complete:
  path:     /checkout/{documentNumber}/complete
  defaults: { _controller: StoreBundle:Order/Checkout:complete }

#checkout_1click:
#  path:     /checkout/1click
#  defaults: { _controller: StoreBundle:Order/Checkout:oneClick }
#  methods:  [POST]

#checkout_preorder:
#  path:     /checkout/preorder
#  defaults: { _controller: StoreBundle:Order/Checkout:preorder }
#  methods:  [POST]

shipping_method_list:
  path: /shipping/methods
  defaults: { _controller: StoreBundle:Order/Checkout:shippingMethodList }

shipping_choice_list:
  path: /shipping/methods/{id}/choices
  defaults: { _controller: StoreBundle:Order/Checkout:shippingChoiceList }

payment_method_list:
  path: /payment/methods
  defaults: { _controller: StoreBundle:Order/Checkout:paymentMethodList }

internal_pickup_point_;ist:
  path: /internal-pickups
  defaults: { _controller: StoreBundle:Order/Checkout:pickup }

special_offers_index:
  path: /offers
  defaults: { _controller: StoreBundle:Text/SpecialOffer:index }

special_offers_show:
  path: /offers/{slug}
  defaults: { _controller: StoreBundle:Text/SpecialOffer:show}

contacts_index:
  path: /contacts
  defaults: { _controller: StoreBundle:Logistics/Geography:contacts }

#contacts_cities:
#  path: /contacts/cities
#  defaults: { _controller: StoreBundle:Logistics/Geography:contactsCityList }

excursion_index:
  path: /tours
  defaults: { _controller: StoreBundle:Logistics/Geography:excursion }

about_index:
  path: /about
  defaults: { _controller: StoreBundle:Article:about }

product_question:
  path: /api/products/{slug}/question
  defaults: { _controller: StoreBundle:Catalog/Product:askQuestion }
  methods: [POST]

articles_index:
  path: /articles
  defaults: { _controller: StoreBundle:Article:index }

articles_show:
  path: /articles/{slug}
  defaults: { _controller: StoreBundle:Article:show }

api_article_show:
  path: /api/articles/{slug}
  defaults: { _controller: StoreBundle:Article:restShow }

#cart_item_remove_rest:
#  path:     /cart/items/:id
#  methods: [DELETE]
#
#cart_item_remove:
#  path:     /cart/items/:id/remove

rest_api_product:
  path:     /api/products/{slug}
  defaults: { _controller: StoreBundle:Catalog/Product:restGet }
  methods: [GET]

dataexport_yandexmarket:
  path:     /export/yandexmarket
  defaults: { _controller: StoreBundle:DataExport/YandexMarket:export }

sitemap:
  path:     /sitemap.xml
  defaults: { _controller: AccuratewebSeoBundle:Sitemap:index }

api_image_move:
  path:     /admin/api/image_move
  defaults: { _controller: StoreBundle:Image:move }

api_image_crop:
  path:     /admin/api/image_crop
  defaults: { _controller: StoreBundle:Image:crop }

api_admin_cancel_status:
  path: /api/admin/template/status/cancel
  defaults: { _controller: StoreBundle:Order\OrderStatus:cancelStatusTemplate }

#cabinet:
#    path: /cabinet
#    defaults:
#        _controller: FrameworkBundle:Redirect:urlRedirect
#        path: /cabinet/orders

#profile_order_history:
#  path: /cabinet/orders
#  defaults: { _controller: StoreBundle:Profile\UserOrderHistory:index }

#profile:
#  path: /cabinet/profile
#  defaults: { _controller: FOSUserBundle:Profile:show }

#fos_user_profile_show:
#  path: /cabinet/profile
#  defaults: { _controller: StoreBundle:Profile\Profile:show }
#
#fos_user_profile_edit:
#  path: /cabinet/profile/edit
#  defaults: { _controller: FOSUserBundle:Profile:edit }
#
#fos_user_notice_show:
#  path: /cabinet/notice
#  defaults: { _controller: StoreBundle:Profile\Profile:notice }
#
#api_notice_list:
#  path: /api/notice
#  methods: [GET]
#  defaults: { _controller: StoreBundle:Profile\Notification:list }
#
#api_notice_read:
#  path: /api/notice/{id}
#  methods: [GET]
#  defaults: { _controller: StoreBundle:Profile\Notification:read }
#
#api_notice_update:
#  path: /api/notice/{id}
#  methods: [PUT, POST]
#  defaults: { _controller: StoreBundle:Profile\Notification:update }
#
#api_dialog_message_list:
#  path: /api/dialog/message/{dialogId}
#  methods: [GET]
#  defaults: { _controller: StoreBundle:Profile\Dialog:messagesList }
#
#api_dialog_message_add:
#  path: /api/dialog/message/{dialogId}
#  methods: [PUT, POST]
#  defaults: { _controller: StoreBundle:Profile\Dialog:addMessage }

#api_notice_delete:
#  path: /api/notice/{id}
#  methods: [DELETE]

#api_profile_order_history:
#  path: /api/cabinet/orders/{id}
#  defaults: { _controller: StoreBundle:Profile\UserOrderHistory:orderInfo }
#
#api_order_statuses_history:
#  path: /api/cabinet/order/statuses/{orderId}
#  defaults: { _controller: StoreBundle:Profile\UserOrderHistory:orderStatusesHistory }

#api_profile_disable_club_popup:
#  path: /api/cabinet/club-popup
#  methods: [DELETE]
#  defaults: { _controller: StoreBundle:Profile\Profile:disableShowClubPricePopup }

redcode_tree_data:
    path:     /tree/data
    defaults: { _controller: StoreBundle:Admin\Product\ProductTaxonomyAdmin:index }

favorites:
  path: /favorites
  defaults: { _controller: StoreBundle:Store\Favorite\ProductFavorite:index }

#favorite_toggle:
#  path: /favorites/{productId}
#  defaults: { _controller: StoreBundle:Store\Favorite\ProductFavorite:toggle }
#  methods: [POST]

#customer_question:
#  path: /question
#  defaults: { _controller: StoreBundle:Text\CustomerQuestion:index }

customer_question_success:
  path: /question/success
  defaults: { _controller: StoreBundle:Text\Question:success }

cheese_story:
  path: /syrnye-zametki
  defaults: { _controller: StoreBundle:Text\CheeseStory:index }

question:
  path: /question
  defaults: { _controller: StoreBundle:Text\Question:askQuestion }
